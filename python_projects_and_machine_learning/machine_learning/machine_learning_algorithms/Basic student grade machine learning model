# Title: Basic student grade machine learning model
# Author: Otto-Harald Hirvonen
# email: ottoharald.hirvonen@gmail.com
# phone number: 040 41 32 757
# description:
#               This is a basic machine learning algorithm, that predicts
#               student grades from given variables. I used free dataset from
#               UCI machine learning repository. Some credit goes to an youtube
#               channel called tech with tim, who's recommendations and
#               tutorials I used.


import pandas as pd
import numpy as np
import sklearn
from sklearn import linear_model
import matplotlib.pyplot as pyplot
import pickle
from matplotlib import style
from sklearn.utils import shuffle

data = pd.read_csv("student-mat.csv", sep=";")
data = data[["G1", "G2", "G3", "studytime", "failures", "absences"]]

predict = "G3"
x = np.array(data.drop([predict],1)) # data except G3
y = np.array(data[predict])          # just G3


x_train, x_test, y_train, y_test = sklearn.model_selection.train_test_split(x, y, test_size=0.1)
trials = 50
best = 0

"""
for _ in range(trials):


    # The following line splits x and y into data sets that are 10% of the size of our original "data".
    # We do this because we want the machine to learn patterns not memorize our original data set.
    # So for example if we didn't do this, the machine would just go trough the entire set and memorize it
    # so no learning has actually happened.
    x_train, x_test, y_train, y_test = sklearn.model_selection.train_test_split(x, y, test_size=0.1)

    # This is a training model called linear
    linear = linear_model.LinearRegression()
    # This wil make linear regression model of x train and y train
    linear.fit(x_train,y_train)
    # This gives us accuracy of our model from 0 to 1, maybe R score?
    acc = linear.score(x_test, y_test)
    print(acc)

    if acc > best:
        best = acc
        with open("studentmodel_tutorial.pickle", "wb") as f:
            pickle.dump(linear, f)

        pickle_in = open("studentmodel_tutorial.pickle", "rb")
        linear = pickle.load(pickle_in)"""

pickle_in = open("studentmodel_tutorial.pickle", "rb")
linear = pickle.load(pickle_in)

# Coefficent are the scalars of the variables, there are as many coefficents as there are variables)
print('Coefficents: \n', linear.coef_)
# Intercept eli vakio, jossa viiva leikkaa dependent akselin? kun vakiot ovat nolla.
print('Intercept: \n', linear.intercept_)

predictions = linear.predict(x_test)
for i in range(len(predictions)):
    print(predictions[i], x_test[i], y_test[i])

p = 'G1'
style.use("ggplot")
pyplot.scatter(data[p], data['G3'])
pyplot.xlabel(p)
pyplot.ylabel("Final Grade")
pyplot.show()
